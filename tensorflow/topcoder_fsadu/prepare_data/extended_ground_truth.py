import csv
import os, errno
from glob import glob
import random
import shutil
import ntpath


# Where the synsets JPEG files are, all mixed in the same directory (generated by untar_synsets.py)
synsets_dir = './train_all'

# csv file with synsets codes and categories in the dataset
csv_file = csv.reader(open('./synsets.csv', "r"), delimiter=",")

# Identify extended train file names with class numbers {1..200} and synset code
csv_file_w = open('./extended_ground_truth.csv', "w")

# Synsets counter, how many images for each class were found
csv_file_counter = open('./synsets_file_counter.csv', "w")

synsets_ids = {}
counter_synsets = {}
# Initialize the counters
for synset in csv_file:
    synsets_ids[synset[1]] = synset[0]
    counter_synsets[synset[1]] = 0

# Read all filenames from synsets_dir
files_in_synset = glob(os.path.join(synsets_dir, '*'))
random.shuffle(files_in_synset) #Randomize the synset files

# Iterate over all synsets_filenames
for file in files_in_synset:
    filename = ntpath.basename(file)
    # Update counter for specific synset number of files
    counter_synsets[filename[:9]]+=1
    # Identify the image with synset code and class
    line_to_write = filename+","+synsets_ids[filename[:9]]+","+filename[:9]
    # print("line_to_write:", line_to_write)
    csv_file_w.write(line_to_write) # Generate csv file with training images names, label, and synset codes
    csv_file_w.write('\n')

for key, value in counter_synsets.items():
    line_to_write = key+","+str(value)
    csv_file_counter.write(line_to_write)  # Generate csv file with synset code, and number of images found
    csv_file_counter.write('\n')

